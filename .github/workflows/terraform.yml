name: 'Provision_Azure_Infrastructure'

on:
  push:
    branches:
    - Azure
    paths:
      - 'infra/*'
  pull_request:

jobs:
  terraform:
    name: 'Brewdis Infrastructure'
    runs-on: ubuntu-latest
    
    env:
      ARM_CLIENT_ID: ${{ secrets.AZ_CL_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZ_CL_PWD }}
      ARM_SUBSCRIPTION_ID: 874f6233-e9b0-4c57-a3bc-2365b7544f2a
      ARM_TENANT_ID: ${{ secrets.AZ_TENANT_MS }}
      TF_VAR_redisRegions: '["eastus2"]'
      TF_VAR_rgName: 'brewdis-prod'
      TF_VAR_appName: 'brewdis-app-prod'
      TF_VAR_svcName: 'brewdis-svc-prod'
      
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    # Checkout the repository to the GitHub Actions runner
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token 
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ secrets.TF_CLOUD }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init ./infra
      
    # Temporary step to enable troubleshooting
    - name: Temp TroubleShooting
      run: export | grep ARM
      
    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan ./infra
    
      # On push to master, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      if: github.ref == 'refs/heads/master' && github.event_name == 'push'
      run: terraform apply -auto-approve ./infra
